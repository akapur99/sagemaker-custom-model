#!/usr/bin/env python

# Some boilerplate code. Sagemaker expects to have a model definition in /opt/ml/model
# We copy create a dummy file at that location, however we don't use it in inference
import os
import sys
import traceback

# These are the paths to where SageMaker mounts interesting things in your container.
prefix = '/opt/ml/'
output_path = os.path.join(prefix, 'output')


def train():
    try:
        os.makedirs('/opt/ml/model/', exist_ok=True)
        with open('/opt/ml/model/my-model.txt', 'w') as f:
            f.write('Hello world')

        print('Training complete!!')
    except Exception as e:
        # Write out an error file. This will be returned as the failureReason in the
        # DescribeTrainingJob result.
        trc = traceback.format_exc()
        with open(os.path.join(output_path, 'failure'), 'w') as s:
            s.write('Exception during training: ' + str(e) + '\n' + trc)
        # Printing this causes the exception to be in the training job logs, as well.
        print('Exception during training: ' + str(e) + '\n' + trc)
        # A non-zero exit code causes the training job to be marked as Failed.
        sys.exit(255)


if __name__ == '__main__':
    train()

    # A zero exit code causes the job to be marked a Succeeded.
    sys.exit(0)